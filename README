Heliotrope is a personal, search-centric, threaded email server. It provides a
backend service against which email clients / MUAs can be written.

Heliotrope provides all the features you actually want in a modern email
client:

- fast, full-text search over all messages
- a sophisticated query language
- proper message threading
- arbitrary labels
- support for signed and encrypted email
- an extensible JSON-over-HTTP API

Heliotrope is a work in progress. It is not stable. It is only somewhat
tested.

WHY ANOTHER PROTOCOL? WHY NOT JUST USE IMAP?

Because IMAP is terrible and you want all those features listed above.

REQUIREMENTS

Heliotrope is written in a mixture of Ruby and C. You will need a working C
compiler, and a modern Ruby. 1.8.7 or 1.9.2 are good choices. Ruby 1.9.2 will
give you better performance.

Heliotrope uses html2text to generate text from HTML attachments. You will
need this or some reasonable alternative.

Do this:
0. Install html2text. On Debian-based Linux distros, it's `sudo apt-get
   install html2text`.
1. Install a modern Ruby. I recommend 1.9.2. On Debian-based Linux distros,
   you can try the ruby1.9.1 package. Or you can download and compile it from
   http://www.ruby-lang.org/en/downloads/.
2. Run `gem install trollop whistlepig rest-client sinatra rmail leveldb` (or
   `gem1.9.1 ...` if you're using the Debian version).

GETTING IT

Run this: `git clone https://github.com/wmorgan/heliotrope.git`

Once Heliotrope is more stable, you will be able to install it via rubygems.

RUNNING IT

Run `ruby -Ilib bin/heliotrope-server -d <mailstore>`.

Heliotrope exposes a simple debugging HTML interface. If you point your
browser to http://localhost:8042, you should see your empty mailstore.

Congrats! You're running Heliotrope.

IMPORTING SOME MAIL

Heliotrope only returns email in the order it was added to the system. For
normal operation (in which email is added as it arrives) this is fine. For
bulk imports, however, you must take care to add the email in the order you
want it returned.

First, kill your server. You can add emails to the server one at a time when
it's running (see ADDING EMAIL), but for bulk imports, it's much faster to
avoid the HTTP overhead.

To add a pre-existing mbox:
  ruby -Ilib bin/heliotrope-add -m <mbox> -d <mailstore>

To add a pre-existing maildir:
  ruby -Ilib bin/heliotrope-add -a <maildir> -d <mailstore>

To add a pre-existing Gmail account:
  ruby -Ilib bin/heliotrope-add -g <gmail username> -d <mailstore>

To add a pre-existing IMAP account:
  ruby -Ilib bin/heliotrope-add -i <imap server> -d <mailstore>

For testing purposes, you may want to limit the number of emails added by
using the --num-messages option.

After import, start the server. You should see stuff at http://localhost:8042.

For a curses client based on Sup, see https://github.com/wmorgan/turnsole/.

ADDING EMAIL

Once the server is running, you can use heliotrope-add to add individual
emails as they arrive.

To add a single email:
  cat email.txt | ruby -Ilib bin/heliotrope-add

Once Heliotrope is production-ready, I'll add some documentation about
procmailrc or whatever.

JSON API SPEC
-------------

Coming soon! For now, you can reverse engineer lib/heliotrope-client.rb.
